.dp-modal,.modal-background{transition:.5s;opacity:0;visibility:hidden;width:100%;z-index:999999}.dp-modal{position:fixed;left:50%;top:50%;transform:translate(-50%,-50%);background:#fff;max-width:900px;height:90vh;min-height:500px;overflow:scroll}.dp-modal .dp-modal-content{position:relative}.dp-modal .dp-modal-content i.fa.fa-times{position:absolute;top:5px;right:11px;font-size:25px;cursor:pointer}.modal-background{background:rgba(0,0,0,.341176);height:100%;position:fixed;top:0}.dp-stop{overflow:hidden}.dp-show{visibility:visible;opacity:1}.danzerpress-button-modern,.danzerpress-button-modern-transparent,h1,h2,h3,h4,h5,h6{font-family:Montserrat,sans-serif!important}a,li,p,span{font-family:Roboto,sans-serif!important}.drawer-navbar .drawer-container .menu-cta{padding:0 15px 4px}.drawer-navbar .drawer-container .menu-cta a{color:#fff!important}div.danzerpress-icons-section .icon-wrap .danzerpress-md-2.danzerpress-sm-2.danzerpress-xs-1{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column}div.danzerpress-icons-section .icon-wrap .danzerpress-content-wrap{background:#fff;padding:20px;-ms-flex:1 0 auto;flex:1 0 auto;overflow:hidden}div.danzerpress-icons-section.target-locations .hover-state:after{content:"\f063"}.testimonial-section .danzerpress-content{text-align:center;display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:justify;justify-content:space-between}.testimonial-section .danzerpress-content .inner-content-wrap{margin-bottom:20px}.testimonial-section .danzerpress-content img{height:120px;width:120px}input,textarea{width:100%;background:#f8f9f9;border:none;padding:10px;font-size:14px}body.blog .main-content article h2{margin:0 0 5px;font-size:40px}body.blog .main-content article .image-wrap{padding-top:100%;position:relative}body.blog .main-content article .image-wrap img{position:absolute;top:0;left:0;height:100%;width:100%}.blog article .danzerpress-content p{font-size:17px}#infinite-row article{margin-bottom:20px}.home-locations.danzerpress-odd{padding:50px 0 80px;background-color:#fff}.home-locations.danzerpress-odd .danzerpress-background{background:#efefef}.home-icons.danzerpress-even{padding:45px 70px;background-color:#efefef}@media (max-width:767px){.home-icons.danzerpress-even{padding:45px 0}}.home-icons.danzerpress-even .danzerpress-box{background-color:#fff}.home-testimonials{padding:45px 0 70px}.home-injuries{padding:55px 0 70px}.home-injuries img{width:auto}@media (min-width:768px){.home-accidents{padding:55px 70px!important}}@media (max-width:500px){.home-accidents .danzerpress-content-box{min-height:36px}}.home-locations .danzerpress-box.danzerpress-background{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.home-locations .danzerpress-box.danzerpress-background .danzerpress-icon-box{margin:0 5px 0 0}@media (min-width:64em){header.drawer-navbar,header.drawer-navbar .drawer-nav,header.drawer-navbar .drawer-navbar-header{height:5.75rem}img.dark-logo.danzerpress-logo{max-height:90px}}@media (min-width:1000px){.drawer-navbar.drawer-navbar--fixed .drawer-container .drawer-menu li{font-size:16px!important}}.drawer-dropdown-menu-item{font-size:13px!important}div.danzerpress-icons-section .icon-wrap a:hover>.hover-state{opacity:.4}.danzerpress-icons-section .icons-default .hover-state:after{content:"";font-size:35px;color:#fff}.bigger-icon-boxes-and-text .danzerpress-box{padding:60px 20px}.bigger-icon-boxes-and-text h4{font-size:23px}.danzerpress-button-modern:hover{background-color:#245fb2!important}@media (min-width:768px){.bottom-atty-image .danzerpress-col-1{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.bottom-atty-image .danzerpress-col-1 .danzerpress-box{-ms-flex:unset;flex:unset}.bottom-atty-image .danzerpress-img-wrap{text-align:center}.bottom-atty-image .danzerpress-img-wrap img{width:auto}}.single p{color:#000}.single .entry-content a{text-decoration:underline}.single .main-content .danzerpress-pagination .entry-content img,.single .main-content article .entry-content img{width:100%;height:auto}.add-padding-to-h1 h1{padding-bottom:25px}.add-margin-top-to-button .danzerpress-button-wrap{margin-top:25px}@media screen and (max-width:1024px){.drawer-open a.drawer-dropdown,.drawer-open ul.drawer-dropdown-menu{-ms-flex:0 0 100%;flex:0 0 100%;width:100%}.drawer-open .drawer-navbar.drawer-navbar--fixed .drawer-container .drawer-menu li{-ms-flex-direction:column;flex-direction:column}}
/*# sourceMappingURL=data:application/json;base64, */
